{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/010620/56-redux-combining-it-all/frontend-auth/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // IMPORT FOR REDUX STUFF\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'; // Provider is a component that can be rendered on to the DOM\n// Provider is expecting a prop key called store\n\nimport wizardsArray from './wizards'; // combineReducers\n\nimport { combineReducers } from 'redux';\nlet initialState = {\n  wizards: wizardsArray,\n  cats: []\n};\n\nconst wizardReducer = (state = initialState, action) => {\n  console.log(action, \"FROM INSIDE THE REDUCER\");\n\n  switch (action.type) {\n    case \"ADD_WIZARD\":\n      let copyOfArray = [...state.wizards, action.payload];\n      return { ...state,\n        wizards: copyOfArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nlet userInitialState = {\n  id: 0,\n  username: \"\",\n  user_wizards: []\n};\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nlet singularObject = {\n  user: userReducer,\n  wizardInfo: wizardReducer\n};\ncombineReducers();\nlet storeObject = createStore(wizardReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: storeObject,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/010620/56-redux-combining-it-all/frontend-auth/src/index.js"],"names":["React","ReactDOM","App","createStore","Provider","wizardsArray","combineReducers","initialState","wizards","cats","wizardReducer","state","action","console","log","type","copyOfArray","payload","userInitialState","id","username","user_wizards","userReducer","singularObject","user","wizardInfo","storeObject","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;AACE;;AAEF,OAAOC,YAAP,MAAyB,WAAzB,C,CAIA;;AACA,SAASC,eAAT,QAAgC,OAAhC;AAGA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAEH,YADQ;AAEjBI,EAAAA,IAAI,EAAE;AAFW,CAAnB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,yBAApB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,YAAL;AAEE,UAAIC,WAAW,GAAG,CAAC,GAAGL,KAAK,CAACH,OAAV,EAAmBI,MAAM,CAACK,OAA1B,CAAlB;AACA,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,OAAO,EAAEQ;AAFJ,OAAP;;AAKF;AACE,aAAOL,KAAP;AAVJ;AAYD,CAdD;;AAyBA,IAAIO,gBAAgB,GAAG;AACrBC,EAAAA,EAAE,EAAE,CADiB;AAErBC,EAAAA,QAAQ,EAAE,EAFW;AAGrBC,EAAAA,YAAY,EAAE;AAHO,CAAvB;;AAOA,MAAMC,WAAW,GAAG,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACG,IAAf;AACE;AACE,aAAOJ,KAAP;AAFJ;AAID,CALD;;AAQA,IAAIY,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAEF,WADa;AAEnBG,EAAAA,UAAU,EAAEf;AAFO,CAArB;AAKAJ,eAAe;AAoBf,IAAIoB,WAAW,GAAGvB,WAAW,CAC3BO,aAD2B,EAE3BiB,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFZ,CAA7B;AASA3B,QAAQ,CAAC4B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// IMPORT FOR REDUX STUFF\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n// Provider is a component that can be rendered on to the DOM\n  // Provider is expecting a prop key called store\n\nimport wizardsArray from './wizards'\n\n\n\n// combineReducers\nimport { combineReducers } from 'redux'\n\n\nlet initialState = {\n  wizards: wizardsArray,\n  cats: []\n}\n\nconst wizardReducer = (state = initialState, action) => {\n  console.log(action, \"FROM INSIDE THE REDUCER\");\n  switch (action.type) {\n    case \"ADD_WIZARD\":\n\n      let copyOfArray = [...state.wizards, action.payload]\n      return {\n        ...state,\n        wizards: copyOfArray\n      }\n\n    default:\n      return state\n  }\n}\n\n\n\n\n\n\n\n\n\n\nlet userInitialState = {\n  id: 0,\n  username: \"\",\n  user_wizards: []\n}\n\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n\n\nlet singularObject = {\n  user: userReducer,\n  wizardInfo: wizardReducer\n}\n\ncombineReducers()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet storeObject = createStore(\n  wizardReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\n\n\n\n\nReactDOM.render(\n  <Provider store={storeObject}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}