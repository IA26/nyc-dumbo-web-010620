{"ast":null,"code":"var _jsxFileName = \"/Users/hyeokjung.kim/Flatiron-LI/010620/56-redux-combining-it-all/frontend-auth/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // IMPORT FOR REDUX STUFF\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'; // Provider is a component that can be rendered on to the DOM\n// Provider is expecting a prop key called store\n// combineReducers\n\nimport { combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { applyMiddleware, compose } from 'redux'; // import {compose} from 'redux'\n\nlet userInitialState = {\n  id: 0,\n  username: \"\",\n  user_wizards: []\n};\n\nconst userReducer = (state = userInitialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nlet singularObject = {\n  user: userReducer,\n  wizardInfo: wizardReducer\n};\nlet rootReducer = combineReducers(singularObject);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet storeObject = createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk)));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: storeObject,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hyeokjung.kim/Flatiron-LI/010620/56-redux-combining-it-all/frontend-auth/src/index.js"],"names":["React","ReactDOM","App","createStore","Provider","combineReducers","ReduxThunk","applyMiddleware","compose","userInitialState","id","username","user_wizards","userReducer","state","action","type","singularObject","user","wizardInfo","wizardReducer","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","storeObject","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;AACE;AAEF;;AACA,SAASC,eAAT,QAAgC,OAAhC;AAGA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAAQC,eAAR,EAAyBC,OAAzB,QAAuC,OAAvC,C,CACA;;AAaA,IAAIC,gBAAgB,GAAG;AACrBC,EAAAA,EAAE,EAAE,CADiB;AAErBC,EAAAA,QAAQ,EAAE,EAFW;AAGrBC,EAAAA,YAAY,EAAE;AAHO,CAAvB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,gBAAT,EAA2BM,MAA3B,KAAsC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAID,CALD;;AAiBA,IAAIG,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAEL,WADa;AAEnBM,EAAAA,UAAU,EAAEC;AAFO,CAArB;AAKA,IAAIC,WAAW,GAAGhB,eAAe,CAACY,cAAD,CAAjC;AAiBA,MAAMK,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+ChB,OAAxE;AAIA,IAAIiB,WAAW,GAAGtB,WAAW,CAC3BkB,WAD2B,EAE3BC,gBAAgB,CAACf,eAAe,CAACD,UAAD,CAAhB,CAFW,CAA7B;AASAL,QAAQ,CAACyB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// IMPORT FOR REDUX STUFF\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n// Provider is a component that can be rendered on to the DOM\n  // Provider is expecting a prop key called store\n\n// combineReducers\nimport { combineReducers } from 'redux'\n\n\nimport ReduxThunk from 'redux-thunk';\nimport {applyMiddleware, compose} from 'redux'\n// import {compose} from 'redux'\n\n\n\n\n\n\n\n\n\n\n\n\nlet userInitialState = {\n  id: 0,\n  username: \"\",\n  user_wizards: []\n}\n\n\nconst userReducer = (state = userInitialState, action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\nlet singularObject = {\n  user: userReducer,\n  wizardInfo: wizardReducer\n}\n\nlet rootReducer = combineReducers(singularObject)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\n\nlet storeObject = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(ReduxThunk))\n)\n\n\n\n\n\nReactDOM.render(\n  <Provider store={storeObject}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}